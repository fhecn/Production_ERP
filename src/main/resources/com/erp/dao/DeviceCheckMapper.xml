<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.erp.dao.DeviceCheckMapper">
  <resultMap id="BaseResultMap" type="com.erp.bean.DeviceCheck">
    <id column="device_check_id" jdbcType="VARCHAR" property="deviceCheckId" />
    <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="device_check_emp_id" jdbcType="VARCHAR" property="deviceCheckEmpId" />
    <result column="device_check_date" jdbcType="TIMESTAMP" property="deviceCheckDate" />
    <result column="device_check_result" jdbcType="VARCHAR" property="deviceCheckResult" />
    <result column="device_check_fault_id" jdbcType="VARCHAR" property="deviceCheckFaultId" />
  </resultMap>
  <sql id="Base_Column_List">
    device_check_id, device_id, device_check_emp_id, device_check_date, device_check_result, 
    device_check_fault_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from device_check
    where device_check_id = #{deviceCheckId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from device_check
    where device_check_id = #{deviceCheckId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.erp.bean.DeviceCheck">
    insert into device_check (device_check_id, device_id, device_check_emp_id, 
      device_check_date, device_check_result, device_check_fault_id
      )
    values (#{deviceCheckId,jdbcType=VARCHAR}, #{deviceId,jdbcType=VARCHAR}, #{deviceCheckEmpId,jdbcType=VARCHAR}, 
      #{deviceCheckDate,jdbcType=TIMESTAMP}, #{deviceCheckResult,jdbcType=VARCHAR}, #{deviceCheckFaultId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.erp.bean.DeviceCheck">
    insert into device_check
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deviceCheckId != null">
        device_check_id,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="deviceCheckEmpId != null">
        device_check_emp_id,
      </if>
      <if test="deviceCheckDate != null">
        device_check_date,
      </if>
      <if test="deviceCheckResult != null">
        device_check_result,
      </if>
      <if test="deviceCheckFaultId != null">
        device_check_fault_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deviceCheckId != null">
        #{deviceCheckId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="deviceCheckEmpId != null">
        #{deviceCheckEmpId,jdbcType=VARCHAR},
      </if>
      <if test="deviceCheckDate != null">
        #{deviceCheckDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceCheckResult != null">
        #{deviceCheckResult,jdbcType=VARCHAR},
      </if>
      <if test="deviceCheckFaultId != null">
        #{deviceCheckFaultId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.erp.bean.DeviceCheck">
    update device_check
    <set>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="deviceCheckEmpId != null">
        device_check_emp_id = #{deviceCheckEmpId,jdbcType=VARCHAR},
      </if>
      <if test="deviceCheckDate != null">
        device_check_date = #{deviceCheckDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceCheckResult != null">
        device_check_result = #{deviceCheckResult,jdbcType=VARCHAR},
      </if>
      <if test="deviceCheckFaultId != null">
        device_check_fault_id = #{deviceCheckFaultId,jdbcType=VARCHAR},
      </if>
    </set>
    where device_check_id = #{deviceCheckId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.erp.bean.DeviceCheck">
    update device_check
    set device_id = #{deviceId,jdbcType=VARCHAR},
      device_check_emp_id = #{deviceCheckEmpId,jdbcType=VARCHAR},
      device_check_date = #{deviceCheckDate,jdbcType=TIMESTAMP},
      device_check_result = #{deviceCheckResult,jdbcType=VARCHAR},
      device_check_fault_id = #{deviceCheckFaultId,jdbcType=VARCHAR}
    where device_check_id = #{deviceCheckId,jdbcType=VARCHAR}
  </update>
  <resultMap id="DeviceCheckVOResultMap" type="com.erp.bean.device.DeviceCheckVO">
    <id column="device_check_id" jdbcType="VARCHAR" property="deviceCheckId" />
    <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="device_check_emp_id" jdbcType="VARCHAR" property="deviceCheckEmpId" />
    <result column="device_check_date" jdbcType="TIMESTAMP" property="deviceCheckDate" />
    <result column="device_check_result" jdbcType="VARCHAR" property="deviceCheckResult" />
    <result column="device_check_fault_id" jdbcType="VARCHAR" property="deviceCheckFaultId"/>
    <association property="deviceName" javaType="String"
                 select="com.erp.dao.DeviceCheckMapper.findDeviceCheckDeviceName"
                 column="device_id">
    </association>
    <association property="deviceCheckEmp" javaType="String"
                 select="com.erp.dao.DeviceCheckMapper.findDeviceCheckDeviceCheckEmp"
                 column="device_check_emp_id">
    </association>
  </resultMap>
  <select id="findAllDeviceCheck" resultMap="DeviceCheckVOResultMap">
    SELECT * from device_check
  </select>
  <select id="findDeviceCheckDeviceName" parameterType="string" resultType="String">
 SELECT device_name FROM  device  WHERE device_id=#{deviceId};
  </select>
  <select id="findDeviceCheckDeviceCheckEmp" parameterType="String" resultType="String">
    SELECT emp_name FROM employee WHERE emp_id=#{device_check_emp_id}
  </select>

  <delete id="delete_batchDeviceCheck">
    DELETE FROM device_check
    <where>
      <foreach collection="array" item="id">
        or device_check_id=#{id}
      </foreach>
    </where>
  </delete>
  <update id="update_noteDeviceCheck" parameterType="hashMap">
      update device_check set device_check_result=#{deviceCheckResult} where device_check_id=#{deviceCheckId}
  </update>
  <resultMap id="DeviceCheckVOMap" type="com.erp.bean.device.DeviceCheckVO">
    <id column="device_check_id" jdbcType="VARCHAR" property="deviceCheckId" />
    <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="device_check_emp_id" jdbcType="VARCHAR" property="deviceCheckEmpId" />
    <result column="device_check_date" jdbcType="TIMESTAMP" property="deviceCheckDate" />
    <result column="device_check_result" jdbcType="VARCHAR" property="deviceCheckResult" />
    <result column="device_check_fault_id" jdbcType="VARCHAR" property="deviceCheckFaultId"/>
    <result column="device_name" jdbcType="VARCHAR" property="deviceName"/>
    <association property="deviceCheckEmp" javaType="String"
                 select="com.erp.dao.DeviceCheckMapper.findDeviceCheckDeviceCheckEmp"
                 column="device_check_emp_id">
    </association>
  </resultMap>
  <select id="search_deviceCheck_by_deviceName" resultMap="DeviceCheckVOMap">
    SELECT  device_check_id, device_check.device_id, device_check_emp_id, device_check_date, device_check_result,
    device_check_fault_id,device_name FROM device INNER JOIN device_check
    where device.device_id=device_check.device_id
    AND device_name like concat('%',#{searchvalue},'%')
  </select>

  <select id="search_deviceCheck_by_deviceCheckId" resultMap="DeviceCheckVOResultMap">
    SELECT *FROM device_check WHERE device_check_id LIKE concat('%',#{searchValue},'%')
  </select>
</mapper>